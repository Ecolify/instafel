import groovy.util.Node

val libs = rootProject.extra["patcherLibs"] as Map<*, *>
var config = rootProject.extra["instafelConfig"] as Map<*, *>
val projectConfig = config["patcher"] as Map<*, *>
val patcherVersion = projectConfig["patcher_version"] as String
val projectTag = projectConfig["tag"] as String
val commitHash: String by rootProject.extra

plugins {
    kotlin("jvm") version "2.2.10"
    java
    application
    id("com.gradleup.shadow") version "9.0.1"
    id("maven-publish")
}

group = "instafel"
version = "v$patcherVersion"

repositories {
    mavenCentral()
    google()
    maven("https://jitpack.io")
}

dependencies {
    implementation(kotlin("stdlib"))
    implementation(libs["kotlin-reflect"]!!)
    implementation(libs["org-json"]!!)
    implementation(libs["commons-io"]!!)
    implementation(libs["okhttp"]!!)
    implementation(libs["apktool-lib"]!!)
    implementation(libs["classgraph"]!!)
    implementation(libs["jackson-databind"]!!)
    implementation(libs["jackson-yaml"]!!)
}

application {
    mainClass = "instafel.patcher.MainKt"
}

tasks.shadowJar {
    archiveBaseName = "ifl-patcher"
    archiveClassifier = ""
    destinationDirectory.set(file("${rootProject.rootDir}/.output"))

    exclude("META-INF/maven/**", "LICENSE*", "XMLPULL*")

    manifest {
        attributes(
            "Patcher-Cli-Version" to patcherVersion,
            "Patcher-Cli-Commit" to commitHash,
            "Patcher-Cli-Branch" to "main",
            "Patcher-Cli-Tag" to projectTag
        )
    }

    from("$buildDir/generated-poms/pom.xml") {
        into("META-INF/maven/instafel/patcher")
        rename { "pom.xml" }
    }
}

tasks.shadowJar {
    dependsOn("generatePomFile")
}

tasks.withType<JavaCompile> {
    options.compilerArgs.add("-Xlint:deprecation")
}

tasks.register("build-jar") {
    dependsOn("shadowJar")

    doLast {
        println("All build tasks completed successfully")
    }
}

publishing {
    publications {
        create<MavenPublication>("publish-patcher") {
            groupId = "instafel"
            artifactId = "patcher"
            version = "v$patcherVersion"

            // JAR artifact
            artifact(tasks.shadowJar.get().archiveFile) {
                builtBy(tasks.shadowJar)
            }

            // POM artifact (generated by other task instead of Maven Publication)
            pom {
                tasks.named("publish") {
                    dependsOn("generatePomFile")
                }

                val pomFile = file("$buildDir/generated-poms/pom.xml")

                withXml {
                    val parser = groovy.xml.XmlParser()
                    val pomNode = parser.parse(pomFile)

                    asNode().children().clear()

                    pomNode.children().forEach { child ->
                        asNode().append(child as Node?)
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/mamiiblt/instafel")
            credentials {
                username = findProperty("gpr.user") as String? ?: System.getenv("GITHUB_USER")
                password = findProperty("gpr.key") as String? ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

tasks.register("generatePomFile") {
    group = "build"
    description = "Generates POM file for Instafel Patcher dynamically"

    doLast {
        val jarFile = tasks.shadowJar.get().archiveFile.get().asFile
        val pomFile = File("$buildDir/generated-poms/pom.xml")
        pomFile.parentFile.mkdirs()

        pomFile.writeText(
            """<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>instafel</groupId>
  <artifactId>patcher</artifactId>
  <version>v$patcherVersion</version>
  <name>Instafel Patcher CLI</name>
  <description># Instafel Patcher

To download the **Instafel Patcher** command line executable, click on the **“patcher-v$patcherVersion.jar”** file in the **“Assets”** tab on the side and download it.

## Build Information

| Property | Value |
| ------------- | ------------- |
| Version  | v$patcherVersion |
| Channel  | $projectTag |
| Base Commit  | [$commitHash](https://github.com/mamiiblt/instafel/commit/$commitHash)  |
| Branch  | [main](https://github.com/mamiiblt/instafel) |

## More Information?

For more information about the patcher, please visit [Instafel Wiki](instafel.app/wiki)</description>
  <url>https://github.com/mamiiblt/instafel</url>
</project>
"""
        )
        println("POM file generated succesfully")
    }
}