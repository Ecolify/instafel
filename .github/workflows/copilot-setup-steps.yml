name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Clone Instaeclipse Repo
        run: | 
          git clone https://github.com/ReSo7200/InstaEclipse.git instaeclipse
          cd instaeclipse
          rm -rf .git
          cd ..

      - name: Download Instagram APKS
        run: |
          mkdir -p instagram
          curl -L -f -o instagram/instagram.apks "https://eb5e7388c3df147b74dd2379b7cf8323.r2.cloudflarestorage.com/downloadprod/wp-content/uploads/2025/10/28/68fef049abc9a/com.instagram.android_405.0.0.0.33-381101799_2dpi_1faa8390a1fa4c13702e5552da88e853_apkmirror.com.apkm?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=72a5ba3a0b8a601e535d5525f12f8177%2F20251028%2Fauto%2Fs3%2Faws4_request&X-Amz-Date=20251028T025735Z&X-Amz-SignedHeaders=host&X-Amz-Expires=3600&X-Amz-Signature=3062daddf6a393a6b29a73b6fc59bf6b086b993637506bfe4197cf49d18c5a93"
          ls -l instagram/instagram.apks

      - name: Install apktool jar
        run: |
          curl -L -f -o apktool.jar "https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.12.1.jar"
          chmod +x apktool.jar

      - name: Add framework for apktool
        run: |
          mkdir -p frameworks
          curl -L -f -o frameworks/framework-res.apk "https://dumps.tadiphone.dev/dumps/samsung/dm3q/-/raw/dm3qxxx-user-15-AP3A.240905.015.A2-S918BXXU8DYD9-release-keys/system/system/framework/framework-res.apk?ref_type=heads&inline=false"
          test -s frameworks/framework-res.apk
          java -jar apktool.jar if frameworks/framework-res.apk

      - name: Unzip .apks and pick APK to decompile
        run: |
          set -e
          mkdir -p instagram/apks_extracted
          unzip -q instagram/instagram.apks -d instagram/apks_extracted
          # list extracted files
          echo "Extracted files:"
          ls -la instagram/apks_extracted | sed -n '1,200p'
          # find candidate APKs
          mapfile -t apks < <(find instagram/apks_extracted -type f -name '*.apk')
          if [ ${#apks[@]} -eq 0 ]; then
            echo "ERROR: no APKs found inside instagram.apks"
            exit 1
          fi
          # prefer base.apk or universal.apk otherwise pick largest
          preferred=""
          for f in "${apks[@]}"; do
            if echo "$f" | grep -qi 'base.apk'; then preferred="$f"; break; fi
            if echo "$f" | grep -qi 'universal.apk'; then preferred="$f"; fi
          done
          if [ -z "$preferred" ]; then
            preferred=$(printf "%s\n" "${apks[@]}" | xargs -I{} ls -S {} | head -n1)
          fi
          echo "Selected APK for decompilation: $preferred"
          mv "$preferred" instagram/instagram_selected.apk
          ls -lh instagram/instagram_selected.apk

      - name: Decompile selected APK with apktool
        working-directory: instagram
        run: |
          java -jar ../apktool.jar d -f --keep-broken-res instagram_selected.apk -o instagram_src || true
          # collect all smali* dirs into repo root instagram/
          for d in instagram_src/smali*; do
            if [ -d "$d" ]; then
              bn=$(basename "$d")
              mv -f "$d" "./$bn" || true
            fi
          done
          # ensure AndroidManifest and res exist
          test -f instagram_src/AndroidManifest.xml || echo "Warning: AndroidManifest.xml missing"
          test -d instagram_src/res || echo "Warning: res/ missing"
          echo "Smali folders at: $(ls -d smali* 2>/dev/null || echo 'none')"
