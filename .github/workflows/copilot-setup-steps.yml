name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Set Up NodeJs
        uses: actions/setup-node@v6
        with:
          package-manager-cache: false
         
      - name: Clone Instaeclipse Repo
        run: | 
          git clone https://github.com/ReSo7200/InstaEclipse.git instaeclipse
          cd instaeclipse
          rm -rf .git
          cd ..

      - name: Download Instagram APKS
        run: |
          mkdir -p instagram
          curl -L -f -o instagram/instagram_selected.apk "https://pixeldrain.com/api/file/w5UyR2Rr?download"
          ls -l instagram/instagram_selected.apk

      - name: Install apktool jar
        run: |
          curl -L -f -o apktool.jar "https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.12.1.jar"
          chmod +x apktool.jar

      - name: Add framework for apktool
        run: |
          mkdir -p frameworks
          curl -L -f -o frameworks/framework-res.apk "https://dumps.tadiphone.dev/dumps/samsung/dm3q/-/raw/dm3qxxx-user-15-AP3A.240905.015.A2-S918BXXU8DYD9-release-keys/system/system/framework/framework-res.apk?ref_type=heads&inline=false"
          test -s frameworks/framework-res.apk
          java -jar apktool.jar if frameworks/framework-res.apk

      - name: Decompile selected APK with apktool
        working-directory: instagram
        run: |
          java -jar ../apktool.jar d -f --keep-broken-res instagram_selected.apk -o instagram_src || true
          # collect all smali* dirs into repo root instagram/
          for d in instagram_src/smali*; do
            if [ -d "$d" ]; then
              bn=$(basename "$d")
              mv -f "$d" "./$bn" || true
            fi
          done
          # ensure AndroidManifest and res exist
          test -f instagram_src/AndroidManifest.xml || echo "Warning: AndroidManifest.xml missing"
          test -d instagram_src/res || echo "Warning: res/ missing"
          echo "Smali folders at: $(ls -d smali* 2>/dev/null || echo 'none')"

      - name: Install CLI tools for MCP process server
        run: |
            set -euxo pipefail

            # Actualiza paquetes base
            # sudo apt-get update

            # Instala herramientas esenciales y runtimes
            sudo apt-get install -y --no-install-recommends \
              fd-find jq yq zip unzip p7zip-full tree curl wget \
              sed gawk perl tar file patch diffutils findutils 

            # Instala servidores MCP locales vía npm (instalación global)
            sudo npm install -g --no-progress \
              @modelcontextprotocol/server-everything@latest \
              @modelcontextprotocol/server-filesystem@latest \
              @modelcontextprotocol/server-memory@latest \
              @modelcontextprotocol/server-github@latest \
              @modelcontextprotocol/server-sequential-thinking@latest

            # Instala pipx de forma segura y asegurando PATH
            python3 -m pip install --user --upgrade pipx
            python3 -m pipx ensurepath

            # Carga el path de pipx para la sesión actual (no falla si ya está)
            export PATH="$HOME/.local/bin:$PATH"

            # Instala el servidor mcp-server-fetch con pipx
            if command -v pipx >/dev/null 2>&1; then
              pipx install --force mcp-server-fetch
            else
              python3 -m pipx install --force mcp-server-fetch
            fi

