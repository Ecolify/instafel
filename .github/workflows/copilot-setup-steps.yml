name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: Clone Instaeclipse Repo
        run: | 
          git clone https://github.com/ReSo7200/InstaEclipse.git instaeclipse
          cd instaeclipse
          rm -rf .git
          cd ..

      - name: Download Instagram APKS
        run: |
          mkdir -p instagram
          curl -L -f -o instagram/instagram_selected.apk "https://my.microsoftpersonalcontent.com/personal/f2d8dcd41970e636/_layouts/15/download.aspx?UniqueId=f1de2ff8-4f75-4389-8230-f8e6acb581ef&Translate=false&tempauth=v1e.eyJzaXRlaWQiOiI3M2NlNzYzOS04ZmZhLTQ2MTMtOWZmZC0zODgyNDMyZjc0ZjciLCJhdWQiOiIwMDAwMDAwMy0wMDAwLTBmZjEtY2UwMC0wMDAwMDAwMDAwMDAvbXkubWljcm9zb2Z0cGVyc29uYWxjb250ZW50LmNvbUA5MTg4MDQwZC02YzY3LTRjNWItYjExMi0zNmEzMDRiNjZkYWQiLCJleHAiOiIxNzYxNjk3MTMyIn0.JZNFl36YZaNohdmHLdgm3xKaPcAeIlbWL74SrauhLj-GoBvuQqM0oL-NTrQawoq7ct4MfqiTMsRzyZUa_4tFVz-SxEbciFFPDlzUF8v_v3XujbS9uj7MjWONWYmjuO4i2tcOiL4aAUsod28qkgrLZFzmQMXwKJ4vYxIqsEdhAq0Ko0fZPdX_jTuofkaqWOejNSw7-4F2kfNxzhY2GRMwIyibbSLg_a5_fOMyixhldBAIP_ViA4SehKTTqMD1pvf2ryeWXSd09iDm8SdLxlDIxfKxPD4cx4Vk6A5k2VO0_QSFnvS0Bdvpab19x-rSK62SVdU4c0hzlMJvFlEB8hYuEm7XYdlRwHFFSbFqG0pGuprYGQ57FW-wPkS6PZjloBXOlZJvvuyc0s60KKBR_l3URl-9Fw6qbhM9SEW19BvRkdb4c8fwvt7ppEswuLxBi9M88G5IpAY0NDTyqtvi6ptazMX0ypbzu6KSM9Tpy-zPwhDWGwZ02NLDny4lIyZNqUAUK6uEwkYSC8MC312DSFkedg.d6p0VJWTxhyD03LrhCC17z7V6B2IEbZd6XwF2lnrMZ4&ApiVersion=2.0"
          ls -l instagram/instagram_selected.apk

      - name: Install apktool jar
        run: |
          curl -L -f -o apktool.jar "https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.12.1.jar"
          chmod +x apktool.jar

      - name: Add framework for apktool
        run: |
          mkdir -p frameworks
          curl -L -f -o frameworks/framework-res.apk "https://dumps.tadiphone.dev/dumps/samsung/dm3q/-/raw/dm3qxxx-user-15-AP3A.240905.015.A2-S918BXXU8DYD9-release-keys/system/system/framework/framework-res.apk?ref_type=heads&inline=false"
          test -s frameworks/framework-res.apk
          java -jar apktool.jar if frameworks/framework-res.apk

      - name: Decompile selected APK with apktool
        working-directory: instagram
        run: |
          java -jar ../apktool.jar d -f --keep-broken-res instagram_selected.apk -o instagram_src || true
          # collect all smali* dirs into repo root instagram/
          for d in instagram_src/smali*; do
            if [ -d "$d" ]; then
              bn=$(basename "$d")
              mv -f "$d" "./$bn" || true
            fi
          done
          # ensure AndroidManifest and res exist
          test -f instagram_src/AndroidManifest.xml || echo "Warning: AndroidManifest.xml missing"
          test -d instagram_src/res || echo "Warning: res/ missing"
          echo "Smali folders at: $(ls -d smali* 2>/dev/null || echo 'none')"

      - name: Install CLI tools for MCP process server
        run: |
            set -euxo pipefail

            # Actualiza paquetes base
            sudo apt-get update

            # Instala herramientas esenciales y runtimes
            sudo apt-get install -y --no-install-recommends \
              ripgrep fd-find jq yq zip unzip p7zip-full tree sqlite3 universal-ctags git gh curl wget \
              sed gawk perl tar file patch diffutils findutils moreutils rename \
              python3 python3-venv python3-pip nodejs npm

            # Asegura que 'fd' esté disponible como alias de 'fdfind'
            if command -v fdfind >/dev/null 2>&1 && ! command -v fd >/dev/null 2>&1; then
              sudo ln -s "$(command -v fdfind)" /usr/local/bin/fd
            fi

            # Comprueba si npx ya existe; si no, actualiza npm (npx viene con npm)
            if command -v npx >/dev/null 2>&1; then
              echo "npx already present: $(npx --version)"
            else
              sudo npm install -g npm@latest
              command -v npx >/dev/null 2>&1 || sudo npm install -g npx --force
            fi

            # Instala servidores MCP locales vía npm (instalación global)
            sudo npm install -g --no-progress \
              @modelcontextprotocol/server-everything@latest \
              @modelcontextprotocol/server-filesystem@latest \
              @modelcontextprotocol/server-memory@latest \
              @modelcontextprotocol/server-github@latest \
              @modelcontextprotocol/server-sequential-thinking@latest

            # Instala pipx de forma segura y asegurando PATH
            python3 -m pip install --user --upgrade pipx
            python3 -m pipx ensurepath

            # Carga el path de pipx para la sesión actual (no falla si ya está)
            export PATH="$HOME/.local/bin:$PATH"

            # Instala el servidor mcp-server-fetch con pipx
            if command -v pipx >/dev/null 2>&1; then
              pipx install --force mcp-server-fetch
            else
              python3 -m pipx install --force mcp-server-fetch
            fi

            # Verificaciones finales
            command -v node || { echo "node not found"; exit 1; }
            node --version
            command -v npm || { echo "npm not found"; exit 1; }
            npm --version
            command -v npx || { echo "npx not found"; exit 1; }
            npx --version
            command -v pipx || { echo "pipx not found"; exit 1; }
            pipx --version
            pipx list || true
