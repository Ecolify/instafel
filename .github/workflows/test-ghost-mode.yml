name: Test Ghost Mode Patches

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/**'
      - 'app/src/main/java/instafel/app/utils/ghost/**'
      - '.github/workflows/test-ghost-mode.yml'

jobs:
  test-ghost-mode-patches:
    name: Download Instagram Alpha, Patch & Verify Ghost Mode
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build Instafel components
        run: |
          echo "Building app..."
          ./gradlew :app:assembleRelease --no-daemon
          
          echo "Building patcher-core..."
          ./gradlew :patcher-core:build --no-daemon
          
          echo "Building patcher..."
          ./gradlew :patcher:build --no-daemon
          
      - name: Verify Ghost Mode patches exist
        run: |
          echo "Checking for Ghost Mode patch files..."
          
          if [ ! -f "patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostSeen.kt" ]; then
            echo "❌ GhostSeen.kt not found"
            exit 1
          fi
          
          if [ ! -f "patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostTyping.kt" ]; then
            echo "❌ GhostTyping.kt not found"
            exit 1
          fi
          
          if [ ! -f "patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostScreenshot.kt" ]; then
            echo "❌ GhostScreenshot.kt not found"
            exit 1
          fi
          
          if [ ! -f "patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostStory.kt" ]; then
            echo "❌ GhostStory.kt not found"
            exit 1
          fi
          
          if [ ! -f "patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostViewOnce.kt" ]; then
            echo "❌ GhostViewOnce.kt not found"
            exit 1
          fi
          
          if [ ! -f "patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostMode.kt" ]; then
            echo "❌ GhostMode.kt (patch group) not found"
            exit 1
          fi
          
          echo "✅ All Ghost Mode patch files exist"
          
      - name: Verify GhostModeManager has static methods
        run: |
          echo "Checking GhostModeManager for smali-callable static methods..."
          
          if ! grep -q "public static boolean checkGhostSeenEnabled()" app/src/main/java/instafel/app/utils/ghost/GhostModeManager.java; then
            echo "❌ checkGhostSeenEnabled() static method not found"
            exit 1
          fi
          
          if ! grep -q "public static boolean checkGhostTypingEnabled()" app/src/main/java/instafel/app/utils/ghost/GhostModeManager.java; then
            echo "❌ checkGhostTypingEnabled() static method not found"
            exit 1
          fi
          
          if ! grep -q "public static boolean checkGhostScreenshotEnabled()" app/src/main/java/instafel/app/utils/ghost/GhostModeManager.java; then
            echo "❌ checkGhostScreenshotEnabled() static method not found"
            exit 1
          fi
          
          if ! grep -q "public static boolean checkGhostStoryEnabled()" app/src/main/java/instafel/app/utils/ghost/GhostModeManager.java; then
            echo "❌ checkGhostStoryEnabled() static method not found"
            exit 1
          fi
          
          if ! grep -q "public static boolean checkGhostViewOnceEnabled()" app/src/main/java/instafel/app/utils/ghost/GhostModeManager.java; then
            echo "❌ checkGhostViewOnceEnabled() static method not found"
            exit 1
          fi
          
          echo "✅ All static methods present in GhostModeManager"
          
      - name: Verify patches use correct smali invocations
        run: |
          echo "Checking that patches invoke GhostModeManager static methods..."
          
          # Check GhostSeen patch
          if ! grep -q "invoke-static {}, Linstafel/app/utils/ghost/GhostModeManager;->checkGhostSeenEnabled()Z" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostSeen.kt; then
            echo "❌ GhostSeen.kt doesn't invoke checkGhostSeenEnabled()"
            exit 1
          fi
          
          # Check GhostTyping patch
          if ! grep -q "invoke-static {}, Linstafel/app/utils/ghost/GhostModeManager;->checkGhostTypingEnabled()Z" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostTyping.kt; then
            echo "❌ GhostTyping.kt doesn't invoke checkGhostTypingEnabled()"
            exit 1
          fi
          
          # Check GhostScreenshot patch
          if ! grep -q "invoke-static {}, Linstafel/app/utils/ghost/GhostModeManager;->checkGhostScreenshotEnabled()Z" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostScreenshot.kt; then
            echo "❌ GhostScreenshot.kt doesn't invoke checkGhostScreenshotEnabled()"
            exit 1
          fi
          
          # Check GhostStory patch
          if ! grep -q "invoke-static {}, Linstafel/app/utils/ghost/GhostModeManager;->checkGhostStoryEnabled()Z" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostStory.kt; then
            echo "❌ GhostStory.kt doesn't invoke checkGhostStoryEnabled()"
            exit 1
          fi
          
          # Check GhostViewOnce patch
          if ! grep -q "invoke-static {}, Linstafel/app/utils/ghost/GhostModeManager;->checkGhostViewOnceEnabled()Z" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostViewOnce.kt; then
            echo "❌ GhostViewOnce.kt doesn't invoke checkGhostViewOnceEnabled()"
            exit 1
          fi
          
          echo "✅ All patches correctly invoke GhostModeManager static methods"
          
      - name: Verify patches search for correct strings
        run: |
          echo "Checking that patches search for InstaEclipse-compatible string patterns..."
          
          # Check GhostSeen searches for "mark_thread_seen-"
          if ! grep -q '"mark_thread_seen-"' patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostSeen.kt; then
            echo "❌ GhostSeen.kt doesn't search for 'mark_thread_seen-'"
            exit 1
          fi
          
          # Check GhostTyping searches for "is_typing_indicator_enabled"
          if ! grep -q '"is_typing_indicator_enabled"' patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostTyping.kt; then
            echo "❌ GhostTyping.kt doesn't search for 'is_typing_indicator_enabled'"
            exit 1
          fi
          
          # Check GhostScreenshot searches for "ScreenshotNotificationManager"
          if ! grep -q '"ScreenshotNotificationManager"' patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostScreenshot.kt; then
            echo "❌ GhostScreenshot.kt doesn't search for 'ScreenshotNotificationManager'"
            exit 1
          fi
          
          # Check GhostStory searches for "media/seen/"
          if ! grep -q '"media/seen/"' patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostStory.kt; then
            echo "❌ GhostStory.kt doesn't search for 'media/seen/'"
            exit 1
          fi
          
          # Check GhostViewOnce searches for "visual_item_seen"
          if ! grep -q '"visual_item_seen"' patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostViewOnce.kt; then
            echo "❌ GhostViewOnce.kt doesn't search for 'visual_item_seen'"
            exit 1
          fi
          
          echo "✅ All patches search for correct InstaEclipse-compatible strings"
          
      - name: Check preference keys are defined
        run: |
          echo "Checking that all ghost mode preference keys are defined..."
          
          if ! grep -q 'ifl_ghost_seen = "35"' app/src/main/java/instafel/app/utils/types/PreferenceKeys.java; then
            echo "❌ ifl_ghost_seen preference key not found"
            exit 1
          fi
          
          if ! grep -q 'ifl_ghost_typing = "36"' app/src/main/java/instafel/app/utils/types/PreferenceKeys.java; then
            echo "❌ ifl_ghost_typing preference key not found"
            exit 1
          fi
          
          if ! grep -q 'ifl_ghost_screenshot = "37"' app/src/main/java/instafel/app/utils/types/PreferenceKeys.java; then
            echo "❌ ifl_ghost_screenshot preference key not found"
            exit 1
          fi
          
          if ! grep -q 'ifl_ghost_view_once = "38"' app/src/main/java/instafel/app/utils/types/PreferenceKeys.java; then
            echo "❌ ifl_ghost_view_once preference key not found"
            exit 1
          fi
          
          if ! grep -q 'ifl_ghost_story = "39"' app/src/main/java/instafel/app/utils/types/PreferenceKeys.java; then
            echo "❌ ifl_ghost_story preference key not found"
            exit 1
          fi
          
          echo "✅ All ghost mode preference keys are defined"
          
      - name: Verify GhostMode patch group
        run: |
          echo "Checking GhostMode patch group bundles all features..."
          
          if ! grep -q "GhostSeen::class" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostMode.kt; then
            echo "❌ GhostMode.kt doesn't include GhostSeen"
            exit 1
          fi
          
          if ! grep -q "GhostTyping::class" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostMode.kt; then
            echo "❌ GhostMode.kt doesn't include GhostTyping"
            exit 1
          fi
          
          if ! grep -q "GhostScreenshot::class" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostMode.kt; then
            echo "❌ GhostMode.kt doesn't include GhostScreenshot"
            exit 1
          fi
          
          if ! grep -q "GhostStory::class" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostMode.kt; then
            echo "❌ GhostMode.kt doesn't include GhostStory"
            exit 1
          fi
          
          if ! grep -q "GhostViewOnce::class" patcher-core/src/main/kotlin/instafel/patcher/core/patches/ghost/GhostMode.kt; then
            echo "❌ GhostMode.kt doesn't include GhostViewOnce"
            exit 1
          fi
          
          echo "✅ GhostMode patch group includes all patches"
          
      - name: Summary
        if: success()
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ Ghost Mode Implementation Verified"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "✅ All 5 ghost mode patches exist and compile"
          echo "✅ GhostModeManager has all required static methods"
          echo "✅ Patches correctly invoke smali-callable methods"
          echo "✅ Patches search for InstaEclipse-compatible strings"
          echo "✅ All preference keys are properly defined"
          echo "✅ GhostMode patch group bundles all features"
          echo ""
          echo "📋 Ghost Mode Features Verified:"
          echo "  👻 Ghost Seen - Hide DM read receipts"
          echo "  ⌨️  Ghost Typing - Hide typing indicators"
          echo "  📸 Ghost Screenshot - Block screenshot notifications"
          echo "  📖 Ghost Story - View stories anonymously"
          echo "  👁️  Ghost ViewOnce - View ViewOnce messages anonymously"
          echo ""
          echo "🎯 Implementation matches InstaEclipse functionality"
          echo "   adapted to Instafel's smali patching architecture"
          echo ""
          echo "⚠️  Note: Full runtime testing requires actual Instagram"
          echo "   APK patching with a real Instagram build, which is"
          echo "   not automated due to APK download restrictions."
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
